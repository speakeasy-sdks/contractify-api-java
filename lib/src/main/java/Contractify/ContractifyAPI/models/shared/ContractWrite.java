/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Contractify.ContractifyAPI.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;


public class ContractWrite {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contract_types")
    public Long[] contractTypes;

    public ContractWrite withContractTypes(Long[] contractTypes) {
        this.contractTypes = contractTypes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_field_values")
    public CustomFieldValueWrite[] customFieldValues;

    public ContractWrite withCustomFieldValues(CustomFieldValueWrite[] customFieldValues) {
        this.customFieldValues = customFieldValues;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("departments")
    public Long[] departments;

    public ContractWrite withDepartments(Long[] departments) {
        this.departments = departments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documents")
    public Long[] documents;

    public ContractWrite withDocuments(Long[] documents) {
        this.documents = documents;
        return this;
    }
    
    @JsonProperty("dossier_id")
    public Long dossierId;

    public ContractWrite withDossierId(Long dossierId) {
        this.dossierId = dossierId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public String duration;

    public ContractWrite withDuration(String duration) {
        this.duration = duration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("end_date")
    public LocalDate endDate;

    public ContractWrite withEndDate(LocalDate endDate) {
        this.endDate = endDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_open_ended")
    public Boolean isOpenEnded;

    public ContractWrite withIsOpenEnded(Boolean isOpenEnded) {
        this.isOpenEnded = isOpenEnded;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legal_entities")
    public Long[] legalEntities;

    public ContractWrite withLegalEntities(Long[] legalEntities) {
        this.legalEntities = legalEntities;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public ContractWrite withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offices")
    public Long[] offices;

    public ContractWrite withOffices(Long[] offices) {
        this.offices = offices;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_id")
    public Long ownerId;

    public ContractWrite withOwnerId(Long ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phase")
    public ContractPhase phase;

    public ContractWrite withPhase(ContractPhase phase) {
        this.phase = phase;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relations")
    public Long[] relations;

    public ContractWrite withRelations(Long[] relations) {
        this.relations = relations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renewal")
    public ContractRenewal renewal;

    public ContractWrite withRenewal(ContractRenewal renewal) {
        this.renewal = renewal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("start_date")
    public LocalDate startDate;

    public ContractWrite withStartDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("termination")
    public ContractTermination termination;

    public ContractWrite withTermination(ContractTermination termination) {
        this.termination = termination;
        return this;
    }
    
    public ContractWrite(@JsonProperty("dossier_id") Long dossierId, @JsonProperty("name") String name) {
        this.dossierId = dossierId;
        this.name = name;
  }
}
