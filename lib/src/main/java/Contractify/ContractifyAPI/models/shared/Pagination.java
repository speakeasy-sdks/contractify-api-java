/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Contractify.ContractifyAPI.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class Pagination {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_page")
    public Long currentPage;

    public Pagination withCurrentPage(Long currentPage) {
        this.currentPage = currentPage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public Long from;

    public Pagination withFrom(Long from) {
        this.from = from;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_page")
    public Long lastPage;

    public Pagination withLastPage(Long lastPage) {
        this.lastPage = lastPage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;

    public Pagination withPath(String path) {
        this.path = path;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("per_page")
    public Long perPage;

    public Pagination withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public Long to;

    public Pagination withTo(Long to) {
        this.to = to;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Long total;

    public Pagination withTotal(Long total) {
        this.total = total;
        return this;
    }
    
    public Pagination(){}
}
