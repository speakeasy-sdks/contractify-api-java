/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Contractify.ContractifyAPI.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;


public class TaskRead {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contract_id")
    public Long contractId;

    public TaskRead withContractId(Long contractId) {
        this.contractId = contractId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public TaskRead withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("due_date")
    public LocalDate dueDate;

    public TaskRead withDueDate(LocalDate dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("due_date_depends_on")
    public TaskReadDueDateDependsOn dueDateDependsOn;

    public TaskRead withDueDateDependsOn(TaskReadDueDateDependsOn dueDateDependsOn) {
        this.dueDateDependsOn = dueDateDependsOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("due_date_interval")
    public String dueDateInterval;

    public TaskRead withDueDateInterval(String dueDateInterval) {
        this.dueDateInterval = dueDateInterval;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("escalation_date")
    public LocalDate escalationDate;

    public TaskRead withEscalationDate(LocalDate escalationDate) {
        this.escalationDate = escalationDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public TaskRead withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_id")
    public Long ownerId;

    public TaskRead withOwnerId(Long ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permalink")
    public String permalink;

    public TaskRead withPermalink(String permalink) {
        this.permalink = permalink;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("reminder_date")
    public LocalDate reminderDate;

    public TaskRead withReminderDate(LocalDate reminderDate) {
        this.reminderDate = reminderDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reminder_duration")
    public String reminderDuration;

    public TaskRead withReminderDuration(String reminderDuration) {
        this.reminderDuration = reminderDuration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repetition_interval")
    public String repetitionInterval;

    public TaskRead withRepetitionInterval(String repetitionInterval) {
        this.repetitionInterval = repetitionInterval;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public TaskReadStatus status;

    public TaskRead withStatus(TaskReadStatus status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public TaskRead withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public TaskRead(){}
}
